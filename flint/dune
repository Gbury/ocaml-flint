(library
 (name flint)
 (public_name flint)
 ; (foreign_archives ((path flint/flint)(mode whole)))
 (foreign_archives flint/flint)
 (foreign_stubs
  (language c)
  (names ocaml_flint_utils)
  (flags
   (:include ../configure/c_flags.sexp)
   :standard)
  (include_dirs
   flint
   (lib zarith)))
 (libraries zarith ctypes threads)
 (flags -w -9-27)
 (ctypes
  (external_library_name flint)
  (build_flags_resolver
   (vendored
    (c_flags
     "-I%{read-lines:pwd}/flint"
     "-I%{read-lines:pwd}/."
     "-Werror=implicit-function-declaration"
     (:include ../configure/c_flags.sexp)
     :standard)
    (c_library_flags
     (:include ../configure/libs.sexp)
     "-lgmp -lmpfr")))
  (deps flint/flint.h flint/fmpz.h)
  (headers
   (include "flint/fmpz.h" "flint/fmpq.h" "string.h"))
  (type_description
   (instance Type)
   (functor Type_description))
  (function_description
   (concurrency sequential)
   (instance Function)
   (functor Function_description))
  (generated_types Types_generated)
  (generated_entry_point C)))

(rule
 (action
  (with-stdout-to
   pwd
   (run pwd))))
